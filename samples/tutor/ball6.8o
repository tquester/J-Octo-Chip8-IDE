# bouncing ball

:struct Balldata {
              x
              y
              dx
              dy
              savex
              savey
            }

            with Balldata begin
              i := ball1
              load Balldata
              loop
                moveBall
              again
            end

:function moveBall {
              var Balldata
              var temp
              i := ball
              sprite x y 8
              savex := x
              savey := y
              x += dx
              y += dy
              if x < 0 then negx
              if x > 64 - 8 then negx
              if y < 0 then negy
              if y > 32 - 8 then negy
              for temp = 0 to 20 temp += 0
              sprite savex savey 8
              return

: negx
              vf := dx
              dx = 0
              dx -= vf
              x += dx
              return

: negy
              vf := dy
              dy = 0
              dy -= vf
              y += dy
              return
            }




: ball1
            Balldata.byte {
              x = 1
              y = 1
              dx = 1
              dy = 1
            }

# Defines the sprite, so that the sprie editor can find it automatically

:sprite ball, 8,8 {
              0x00 0x18 0x3c 0x7e 0x7e 0x3c 0x18 0x00
            }
