:const TestLibStack 0

# Stack library
#   there is only one register (v2v3)
#   operations are
#   push
#   drop
#   add
#   sub
#   mult
#   div
#   mod
#   print

            jump startTestLibStack
:if TestLibStack

:macro printStackEntry num {
              v0 := num
              call printEntry
            }


: startTestLibStack
            hires

            v0 := 0x3
            v1 := 0xe8
            v2 := 0x0
            stackPush


            v0 := 0x00
            v1 := 20
            v2 := 0

            stackPush

            v0 := 0x00
            v1 := 120
            v2 := 0
            stackPush


            v0 := 0x00
            v1 := 80
            v2 := 0
            stackPush

            print
            v0 := key
            printStackEntry 0
            printStackEntry 1
            stackSub
            printStackEntry 0


            v0 := key


            printStackEntry 0
            printStackEntry 1
            stackAdd
            printStackEntry 0

            v0 := key
            printStackEntry 0
            printStackEntry 1
            stackMul
            printStackEntry 0





            loop
            again

: print
            v4 := 0
            v5 := 0
            stackPrint
            return

: printEntry
            v4 := 0
            v5 := 0
            stackPrintBottom
            return
:end

: stackdata
            0 0 0
            0 0 0
            0 0 0
            0 0 0
            0 0 0
            0 0 0
            0 0 0
            0 0 0
            0 0 0
            0 0 0
            0 0 0
            0 0 0
            0 0 0
            0 0 0

: stackptr
            0

: stackClear
            v0 := 0
            i := stackptr
            save v0
            return


: stackPush
            v3 := v0                                                  # save variable
            i := stackptr
            load v0
            v4 := v0
            v0 := v3

            i := stackdata
            i += v4
            v4 += 3
            save v2
            i := stackptr
            v0 := v4
            save v0
            return

: stackDrop
            i := stackptr
            load v0
            if v0 >= 3 begin
              v0 -= 3
              i := stackptr
              save v0
            end
            return

: stackAdd
            i := stackptr
            load v0
            if v0 >= 6 begin
              v0 -= 6
              i := stackptr
              save v0
              i := stackdata
              i += v0
              load v5
              add24bit
              stackPush
            end
            return

: stackSub
            i := stackptr
            load v0
            if v0 >= 6 begin
              v0 -= 6
              i := stackptr
              save v0
              i := stackdata
              i += v0
              load v5
              sub24bit
              stackPush
            end
            return

: stackMul
            i := stackptr
            load v0
            if v0 >= 6 begin
              v0 -= 6
              i := stackptr
              save v0
              i := stackdata
              i += v0
              load v5
              mul24bitClean
              stackPush
            end
            return

: stackDiv
            i := stackptr
            load v0
            if v0 >= 6 begin
              v0 -= 6
              i := stackptr
              save v0
              i := stackdata
              i += v0
              load v5
              div24bit
              stackPush
            end
            return
: stackPrint
            i := stackptr
            load v0
            if v0 == 0 then return
            v4 := v0
            v3 := 0
            loop
              i := stackdata
              i += v3
              load v2
              printDez24
              v3 += 3
              v5 += 6
              if v4 != v3 then
            again
            return

: stackPrintBottom
# prints the item last - v0 (v0 = 0 for last element, 1 for second last etc.)
            v1 := v0
            v0 += v0
            v0 += v1	# * 3
            v1 := v0
            i := stackptr
            load v0
            v0 -= 3
            v0 -= v1
            v6 := v0
            v1 := 3
            mul8bit
            v5 += v0
            i := stackdata
            i += v6
            load v2
            printDez24
            return
